/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['db.js']) {
  _$jscoverage['db.js'] = [];
  _$jscoverage['db.js'][1] = 0;
  _$jscoverage['db.js'][3] = 0;
  _$jscoverage['db.js'][4] = 0;
  _$jscoverage['db.js'][6] = 0;
  _$jscoverage['db.js'][8] = 0;
  _$jscoverage['db.js'][9] = 0;
  _$jscoverage['db.js'][10] = 0;
  _$jscoverage['db.js'][11] = 0;
  _$jscoverage['db.js'][12] = 0;
  _$jscoverage['db.js'][15] = 0;
  _$jscoverage['db.js'][20] = 0;
  _$jscoverage['db.js'][21] = 0;
  _$jscoverage['db.js'][22] = 0;
  _$jscoverage['db.js'][23] = 0;
  _$jscoverage['db.js'][24] = 0;
  _$jscoverage['db.js'][31] = 0;
  _$jscoverage['db.js'][32] = 0;
  _$jscoverage['db.js'][36] = 0;
  _$jscoverage['db.js'][43] = 0;
  _$jscoverage['db.js'][44] = 0;
  _$jscoverage['db.js'][46] = 0;
  _$jscoverage['db.js'][47] = 0;
  _$jscoverage['db.js'][48] = 0;
  _$jscoverage['db.js'][49] = 0;
  _$jscoverage['db.js'][52] = 0;
  _$jscoverage['db.js'][63] = 0;
  _$jscoverage['db.js'][64] = 0;
  _$jscoverage['db.js'][65] = 0;
  _$jscoverage['db.js'][66] = 0;
  _$jscoverage['db.js'][67] = 0;
  _$jscoverage['db.js'][73] = 0;
  _$jscoverage['db.js'][74] = 0;
  _$jscoverage['db.js'][75] = 0;
  _$jscoverage['db.js'][76] = 0;
  _$jscoverage['db.js'][77] = 0;
  _$jscoverage['db.js'][78] = 0;
  _$jscoverage['db.js'][79] = 0;
  _$jscoverage['db.js'][80] = 0;
  _$jscoverage['db.js'][81] = 0;
  _$jscoverage['db.js'][85] = 0;
  _$jscoverage['db.js'][90] = 0;
  _$jscoverage['db.js'][91] = 0;
  _$jscoverage['db.js'][92] = 0;
  _$jscoverage['db.js'][93] = 0;
  _$jscoverage['db.js'][94] = 0;
  _$jscoverage['db.js'][95] = 0;
  _$jscoverage['db.js'][96] = 0;
  _$jscoverage['db.js'][97] = 0;
  _$jscoverage['db.js'][99] = 0;
  _$jscoverage['db.js'][101] = 0;
  _$jscoverage['db.js'][104] = 0;
  _$jscoverage['db.js'][108] = 0;
  _$jscoverage['db.js'][114] = 0;
  _$jscoverage['db.js'][115] = 0;
  _$jscoverage['db.js'][116] = 0;
  _$jscoverage['db.js'][118] = 0;
  _$jscoverage['db.js'][121] = 0;
  _$jscoverage['db.js'][125] = 0;
  _$jscoverage['db.js'][126] = 0;
  _$jscoverage['db.js'][127] = 0;
  _$jscoverage['db.js'][128] = 0;
  _$jscoverage['db.js'][129] = 0;
  _$jscoverage['db.js'][130] = 0;
  _$jscoverage['db.js'][131] = 0;
  _$jscoverage['db.js'][132] = 0;
  _$jscoverage['db.js'][133] = 0;
  _$jscoverage['db.js'][141] = 0;
  _$jscoverage['db.js'][142] = 0;
  _$jscoverage['db.js'][143] = 0;
  _$jscoverage['db.js'][144] = 0;
  _$jscoverage['db.js'][145] = 0;
  _$jscoverage['db.js'][146] = 0;
  _$jscoverage['db.js'][147] = 0;
  _$jscoverage['db.js'][148] = 0;
  _$jscoverage['db.js'][149] = 0;
  _$jscoverage['db.js'][150] = 0;
  _$jscoverage['db.js'][151] = 0;
  _$jscoverage['db.js'][153] = 0;
  _$jscoverage['db.js'][154] = 0;
  _$jscoverage['db.js'][162] = 0;
  _$jscoverage['db.js'][163] = 0;
  _$jscoverage['db.js'][164] = 0;
  _$jscoverage['db.js'][165] = 0;
  _$jscoverage['db.js'][166] = 0;
  _$jscoverage['db.js'][167] = 0;
  _$jscoverage['db.js'][168] = 0;
  _$jscoverage['db.js'][169] = 0;
  _$jscoverage['db.js'][170] = 0;
  _$jscoverage['db.js'][173] = 0;
  _$jscoverage['db.js'][174] = 0;
  _$jscoverage['db.js'][180] = 0;
  _$jscoverage['db.js'][181] = 0;
  _$jscoverage['db.js'][182] = 0;
  _$jscoverage['db.js'][183] = 0;
  _$jscoverage['db.js'][184] = 0;
  _$jscoverage['db.js'][185] = 0;
  _$jscoverage['db.js'][186] = 0;
  _$jscoverage['db.js'][187] = 0;
  _$jscoverage['db.js'][188] = 0;
  _$jscoverage['db.js'][189] = 0;
}
_$jscoverage['db.js'].source = ["var mongo = require('mongodb');","","var server = new mongo.Server('localhost', 27017);","var db = new mongo.Db('web', server);","","var loginRepo = \"projekt\";","","function start(callback){    ","    db.open(function(err,db){","        if(!err){","            console.log(\"Connected to DB\");","            callback(true);","        }","        else {","            callback(false);","        }","    });","}","","function regUser(response, username, password, name, callback) {","    db.collection(loginRepo, function(err, collection) {","        collection.findOne({\"username\":username}, function(err, user){","            if (user == null) {","                var newUser = {\"username\" : username,","                               \"password\" : password,","                               \"active\":false,","                               \"name\": name,","                               \"posts\":[],","                               \"friends\": [username]","                              };","                collection.insert(newUser, function(err, result){","                    callback(true);","                });","            }","            else {","                callback(false);","            }","        });","    });","                         ","}","","function userLogin(response, username, password, callback){","    db.collection(loginRepo, function(err, collection){","        //try {","            collection.findOne({\"username\":username}, function(err, user){","                if (user != null &amp;&amp; user[\"password\"] == password) {","                    collection.update({\"username\":username},{$set:{\"active\":true}});","                    callback(\"1\");","                }","                else {","                    callback(\"0\");","                }","            });","        /* }","                 ","        catch(err) {","            callback(\"3\");","        }*/","    });","}","","function userLogoff(response, username, callback) {","    db.collection(loginRepo, function(err, collection){","        collection.findOne({\"username\":username}, function(err, user){","            collection.update({\"username\":username},{$set:{\"active\":false}});","            callback(\"You logged off!\");","        });","  ","    });","}","","function getProfile(response, userprofile, username, callback){","    db.collection(loginRepo, function(err, collection){       ","        collection.findOne({\"username\":username}, function(err, user){","            var friends = false;","            if(userprofile != username) {","                for (var index in user[\"friends\"]) {","                    if(userprofile == user[\"friends\"][index]) {","                        friends = true;","                        break;","                    }","                }","            }","            callback({\"name\": user[\"name\"], \"username\":user[\"username\"], \"posts\": user[\"posts\"], \"friends\": friends});","        });","    });","}","","function addPost(response, src_user, target_user, text, callback){","    db.collection(loginRepo, function(err, collection) {","        collection.findOne({\"username\":target_user}, function(err, target_prof){","            if(target_prof != null) {   ","                if(target_prof[\"friends\"].indexOf(src_user) != -1) {","                    var newPost = {\"post\" : text, \"user\" : src_user};","                    console.log(text + src_user);","                    collection.update({\"username\":target_user},","                                      {$push:{\"posts\": newPost}}, function (err) {","                                          console.log(err);","                                      });","                    callback(\"Post sent to \" + target_user + \"'s profile!\");","                }","                else {","                    callback(\"Cant post on \" +target_user + \"'s profile yet. You need to be friends first!\");","                }","            }","            else {","                callback(target_user + \" is not a registred user!\");","            }","        });","    });","}","","function addFriend(response, src_user, target_user, callback){","    db.collection(loginRepo, function(err, collection){","        collection.update({\"username\":src_user},","                          {$push:{\"friends\": target_user}});","        collection.update({\"username\":target_user},","                          {$push:{\"friends\": src_user}});","        ","        callback(target_user + \" added to your friends!\");","    });","}","","function getFriends(response, username, callback){","    var friends = new Array();","    db.collection(loginRepo, function(err, collection){","        collection.findOne({\"username\":username}, function(err, user){","            for (var index in user[\"friends\"]) {","                collection.findOne({\"username\": user[\"friends\"][index]}, function(err, friend) {","                    friends.push({\"name\": friend[\"name\"], \"user\": friend[\"username\"]});","                    if (user[\"friends\"].length == friends.length) {","                        callback(friends);","                    }","                });","            }","        });","    });","}","","function getOnlineFriends(response, username, callback){","    var onlineFriends = new Array();","    db.collection(loginRepo, function(err, collection){","        collection.findOne({\"username\":username}, function(err, user){","            console.log(user[\"friends\"]);","            for (var index in user[\"friends\"]) {","                console.log(\"find friend \" + user[\"friends\"][index]);","                collection.findOne({\"username\": user[\"friends\"][index]}, function(err, friend) {","                    console.log(\"friend:\" + friend);","                    if (friend[\"active\"]) {","                        onlineFriends.push({\"name\": friend[\"name\"], \"user\": friend[\"username\"]});","                    }","                    if (user[\"friends\"].length == index + 1) {","                        callback(onlineFriends);","                    }","                });","            }","        });","    });","}","","function searchUser(response, query, callback){","    db.collection(loginRepo, function(err, collection){","        var regexp = \"(?i).*(\" + query + \")+.*\";","        console.log(query);","        collection.find({\"name\": {$regex: regexp}}).toArray( function(err, resultProfiles){","            console.log(resultProfiles);","            var result = new Array();","            for (var index in resultProfiles) {","                result[index] = {\"user\": resultProfiles[index][\"username\"],","                                 \"name\": resultProfiles[index][\"name\"]};","            }","            console.log(result);","            callback(result);","        });","    });","}","","","exports.start = start;","exports.regUser = regUser;","exports.userLogin = userLogin;","exports.userLogoff = userLogoff;","exports.addPost = addPost;","exports.getProfile = getProfile;","exports.addFriend = addFriend;","exports.getFriends = getFriends;","exports.getOnlineFriends = getOnlineFriends;","exports.searchUser = searchUser;",""];
_$jscoverage['db.js'][1]++;
var mongo = require("mongodb");
_$jscoverage['db.js'][3]++;
var server = new (mongo.Server)("localhost", 27017);
_$jscoverage['db.js'][4]++;
var db = new (mongo.Db)("web", server);
_$jscoverage['db.js'][6]++;
var loginRepo = "projekt";
_$jscoverage['db.js'][8]++;
function start(callback) {
  _$jscoverage['db.js'][9]++;
  db.open((function (err, db) {
  _$jscoverage['db.js'][10]++;
  if ((! err)) {
    _$jscoverage['db.js'][11]++;
    console.log("Connected to DB");
    _$jscoverage['db.js'][12]++;
    callback(true);
  }
  else {
    _$jscoverage['db.js'][15]++;
    callback(false);
  }
}));
}
_$jscoverage['db.js'][20]++;
function regUser(response, username, password, name, callback) {
  _$jscoverage['db.js'][21]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][22]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][23]++;
  if ((user == null)) {
    _$jscoverage['db.js'][24]++;
    var newUser = {"username": username, "password": password, "active": false, "name": name, "posts": [], "friends": [username]};
    _$jscoverage['db.js'][31]++;
    collection.insert(newUser, (function (err, result) {
  _$jscoverage['db.js'][32]++;
  callback(true);
}));
  }
  else {
    _$jscoverage['db.js'][36]++;
    callback(false);
  }
}));
}));
}
_$jscoverage['db.js'][43]++;
function userLogin(response, username, password, callback) {
  _$jscoverage['db.js'][44]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][46]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][47]++;
  if (((user != null) && (user.password == password))) {
    _$jscoverage['db.js'][48]++;
    collection.update({"username": username}, {$set: {"active": true}});
    _$jscoverage['db.js'][49]++;
    callback("1");
  }
  else {
    _$jscoverage['db.js'][52]++;
    callback("0");
  }
}));
}));
}
_$jscoverage['db.js'][63]++;
function userLogoff(response, username, callback) {
  _$jscoverage['db.js'][64]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][65]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][66]++;
  collection.update({"username": username}, {$set: {"active": false}});
  _$jscoverage['db.js'][67]++;
  callback("You logged off!");
}));
}));
}
_$jscoverage['db.js'][73]++;
function getProfile(response, userprofile, username, callback) {
  _$jscoverage['db.js'][74]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][75]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][76]++;
  var friends = false;
  _$jscoverage['db.js'][77]++;
  if ((userprofile != username)) {
    _$jscoverage['db.js'][78]++;
    for (var index in user.friends) {
      _$jscoverage['db.js'][79]++;
      if ((userprofile == user.friends[index])) {
        _$jscoverage['db.js'][80]++;
        friends = true;
        _$jscoverage['db.js'][81]++;
        break;
      }
}
  }
  _$jscoverage['db.js'][85]++;
  callback({"name": user.name, "username": user.username, "posts": user.posts, "friends": friends});
}));
}));
}
_$jscoverage['db.js'][90]++;
function addPost(response, src_user, target_user, text, callback) {
  _$jscoverage['db.js'][91]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][92]++;
  collection.findOne({"username": target_user}, (function (err, target_prof) {
  _$jscoverage['db.js'][93]++;
  if ((target_prof != null)) {
    _$jscoverage['db.js'][94]++;
    if ((target_prof.friends.indexOf(src_user) != -1)) {
      _$jscoverage['db.js'][95]++;
      var newPost = {"post": text, "user": src_user};
      _$jscoverage['db.js'][96]++;
      console.log((text + src_user));
      _$jscoverage['db.js'][97]++;
      collection.update({"username": target_user}, {$push: {"posts": newPost}}, (function (err) {
  _$jscoverage['db.js'][99]++;
  console.log(err);
}));
      _$jscoverage['db.js'][101]++;
      callback(("Post sent to " + target_user + "'s profile!"));
    }
    else {
      _$jscoverage['db.js'][104]++;
      callback(("Cant post on " + target_user + "'s profile yet. You need to be friends first!"));
    }
  }
  else {
    _$jscoverage['db.js'][108]++;
    callback((target_user + " is not a registred user!"));
  }
}));
}));
}
_$jscoverage['db.js'][114]++;
function addFriend(response, src_user, target_user, callback) {
  _$jscoverage['db.js'][115]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][116]++;
  collection.update({"username": src_user}, {$push: {"friends": target_user}});
  _$jscoverage['db.js'][118]++;
  collection.update({"username": target_user}, {$push: {"friends": src_user}});
  _$jscoverage['db.js'][121]++;
  callback((target_user + " added to your friends!"));
}));
}
_$jscoverage['db.js'][125]++;
function getFriends(response, username, callback) {
  _$jscoverage['db.js'][126]++;
  var friends = new Array();
  _$jscoverage['db.js'][127]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][128]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][129]++;
  for (var index in user.friends) {
    _$jscoverage['db.js'][130]++;
    collection.findOne({"username": user.friends[index]}, (function (err, friend) {
  _$jscoverage['db.js'][131]++;
  friends.push({"name": friend.name, "user": friend.username});
  _$jscoverage['db.js'][132]++;
  if ((user.friends.length == friends.length)) {
    _$jscoverage['db.js'][133]++;
    callback(friends);
  }
}));
}
}));
}));
}
_$jscoverage['db.js'][141]++;
function getOnlineFriends(response, username, callback) {
  _$jscoverage['db.js'][142]++;
  var onlineFriends = new Array();
  _$jscoverage['db.js'][143]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][144]++;
  collection.findOne({"username": username}, (function (err, user) {
  _$jscoverage['db.js'][145]++;
  console.log(user.friends);
  _$jscoverage['db.js'][146]++;
  for (var index in user.friends) {
    _$jscoverage['db.js'][147]++;
    console.log(("find friend " + user.friends[index]));
    _$jscoverage['db.js'][148]++;
    collection.findOne({"username": user.friends[index]}, (function (err, friend) {
  _$jscoverage['db.js'][149]++;
  console.log(("friend:" + friend));
  _$jscoverage['db.js'][150]++;
  if (friend.active) {
    _$jscoverage['db.js'][151]++;
    onlineFriends.push({"name": friend.name, "user": friend.username});
  }
  _$jscoverage['db.js'][153]++;
  if ((user.friends.length == (index + 1))) {
    _$jscoverage['db.js'][154]++;
    callback(onlineFriends);
  }
}));
}
}));
}));
}
_$jscoverage['db.js'][162]++;
function searchUser(response, query, callback) {
  _$jscoverage['db.js'][163]++;
  db.collection(loginRepo, (function (err, collection) {
  _$jscoverage['db.js'][164]++;
  var regexp = ("(?i).*(" + query + ")+.*");
  _$jscoverage['db.js'][165]++;
  console.log(query);
  _$jscoverage['db.js'][166]++;
  collection.find({"name": {$regex: regexp}}).toArray((function (err, resultProfiles) {
  _$jscoverage['db.js'][167]++;
  console.log(resultProfiles);
  _$jscoverage['db.js'][168]++;
  var result = new Array();
  _$jscoverage['db.js'][169]++;
  for (var index in resultProfiles) {
    _$jscoverage['db.js'][170]++;
    result[index] = {"user": resultProfiles[index].username, "name": resultProfiles[index].name};
}
  _$jscoverage['db.js'][173]++;
  console.log(result);
  _$jscoverage['db.js'][174]++;
  callback(result);
}));
}));
}
_$jscoverage['db.js'][180]++;
exports.start = start;
_$jscoverage['db.js'][181]++;
exports.regUser = regUser;
_$jscoverage['db.js'][182]++;
exports.userLogin = userLogin;
_$jscoverage['db.js'][183]++;
exports.userLogoff = userLogoff;
_$jscoverage['db.js'][184]++;
exports.addPost = addPost;
_$jscoverage['db.js'][185]++;
exports.getProfile = getProfile;
_$jscoverage['db.js'][186]++;
exports.addFriend = addFriend;
_$jscoverage['db.js'][187]++;
exports.getFriends = getFriends;
_$jscoverage['db.js'][188]++;
exports.getOnlineFriends = getOnlineFriends;
_$jscoverage['db.js'][189]++;
exports.searchUser = searchUser;
