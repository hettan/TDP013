/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['chatServer.js']) {
  _$jscoverage['chatServer.js'] = [];
  _$jscoverage['chatServer.js'][2] = 0;
  _$jscoverage['chatServer.js'][5] = 0;
  _$jscoverage['chatServer.js'][6] = 0;
  _$jscoverage['chatServer.js'][8] = 0;
  _$jscoverage['chatServer.js'][9] = 0;
  _$jscoverage['chatServer.js'][13] = 0;
  _$jscoverage['chatServer.js'][14] = 0;
  _$jscoverage['chatServer.js'][18] = 0;
  _$jscoverage['chatServer.js'][19] = 0;
  _$jscoverage['chatServer.js'][20] = 0;
  _$jscoverage['chatServer.js'][21] = 0;
  _$jscoverage['chatServer.js'][22] = 0;
  _$jscoverage['chatServer.js'][23] = 0;
  _$jscoverage['chatServer.js'][26] = 0;
  _$jscoverage['chatServer.js'][27] = 0;
  _$jscoverage['chatServer.js'][28] = 0;
  _$jscoverage['chatServer.js'][29] = 0;
  _$jscoverage['chatServer.js'][32] = 0;
  _$jscoverage['chatServer.js'][35] = 0;
  _$jscoverage['chatServer.js'][36] = 0;
  _$jscoverage['chatServer.js'][37] = 0;
  _$jscoverage['chatServer.js'][38] = 0;
  _$jscoverage['chatServer.js'][39] = 0;
  _$jscoverage['chatServer.js'][40] = 0;
  _$jscoverage['chatServer.js'][43] = 0;
  _$jscoverage['chatServer.js'][44] = 0;
  _$jscoverage['chatServer.js'][45] = 0;
  _$jscoverage['chatServer.js'][46] = 0;
  _$jscoverage['chatServer.js'][49] = 0;
  _$jscoverage['chatServer.js'][52] = 0;
  _$jscoverage['chatServer.js'][53] = 0;
  _$jscoverage['chatServer.js'][54] = 0;
  _$jscoverage['chatServer.js'][55] = 0;
  _$jscoverage['chatServer.js'][56] = 0;
  _$jscoverage['chatServer.js'][57] = 0;
  _$jscoverage['chatServer.js'][58] = 0;
  _$jscoverage['chatServer.js'][59] = 0;
  _$jscoverage['chatServer.js'][60] = 0;
  _$jscoverage['chatServer.js'][61] = 0;
  _$jscoverage['chatServer.js'][66] = 0;
  _$jscoverage['chatServer.js'][69] = 0;
  _$jscoverage['chatServer.js'][73] = 0;
  _$jscoverage['chatServer.js'][77] = 0;
  _$jscoverage['chatServer.js'][78] = 0;
  _$jscoverage['chatServer.js'][82] = 0;
  _$jscoverage['chatServer.js'][86] = 0;
  _$jscoverage['chatServer.js'][87] = 0;
  _$jscoverage['chatServer.js'][88] = 0;
  _$jscoverage['chatServer.js'][89] = 0;
  _$jscoverage['chatServer.js'][91] = 0;
  _$jscoverage['chatServer.js'][94] = 0;
  _$jscoverage['chatServer.js'][95] = 0;
  _$jscoverage['chatServer.js'][97] = 0;
  _$jscoverage['chatServer.js'][98] = 0;
  _$jscoverage['chatServer.js'][99] = 0;
  _$jscoverage['chatServer.js'][100] = 0;
  _$jscoverage['chatServer.js'][101] = 0;
  _$jscoverage['chatServer.js'][104] = 0;
  _$jscoverage['chatServer.js'][107] = 0;
  _$jscoverage['chatServer.js'][108] = 0;
  _$jscoverage['chatServer.js'][109] = 0;
  _$jscoverage['chatServer.js'][110] = 0;
  _$jscoverage['chatServer.js'][111] = 0;
  _$jscoverage['chatServer.js'][112] = 0;
  _$jscoverage['chatServer.js'][118] = 0;
  _$jscoverage['chatServer.js'][120] = 0;
  _$jscoverage['chatServer.js'][127] = 0;
  _$jscoverage['chatServer.js'][129] = 0;
  _$jscoverage['chatServer.js'][137] = 0;
  _$jscoverage['chatServer.js'][147] = 0;
  _$jscoverage['chatServer.js'][155] = 0;
  _$jscoverage['chatServer.js'][156] = 0;
  _$jscoverage['chatServer.js'][157] = 0;
  _$jscoverage['chatServer.js'][158] = 0;
  _$jscoverage['chatServer.js'][164] = 0;
  _$jscoverage['chatServer.js'][165] = 0;
  _$jscoverage['chatServer.js'][166] = 0;
  _$jscoverage['chatServer.js'][169] = 0;
  _$jscoverage['chatServer.js'][176] = 0;
}
_$jscoverage['chatServer.js'].source = ["<span class=\"c\">// websocket and http servers</span>","<span class=\"k\">var</span> webSocketServer <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'websocket'</span><span class=\"k\">).</span>server<span class=\"k\">;</span>","","<span class=\"c\">// list of currently connected clients (users)</span>","<span class=\"k\">var</span> clients <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"k\">];</span>","<span class=\"k\">var</span> groups <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"k\">var</span> userIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"k\">var</span> groupCount <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * Helper function for escaping input strings</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> htmlEntities<span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">return</span> String<span class=\"k\">(</span>str<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;amp;'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;lt;'</span><span class=\"k\">)</span>","        <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;gt;'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\"/g</span><span class=\"k\">,</span> <span class=\"s\">'&amp;quot;'</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> createGroup<span class=\"k\">(</span>userIndex<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> newGroup <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">();</span>","    newGroup<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> userIndex<span class=\"k\">;</span>","    groupCount<span class=\"k\">++;</span>","    groups<span class=\"k\">[</span>groupCount<span class=\"k\">]</span> <span class=\"k\">=</span> newGroup<span class=\"k\">;</span>","    <span class=\"k\">return</span> groupCount<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> inGroup<span class=\"k\">(</span>groupID<span class=\"k\">,</span> userIndex<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> groups<span class=\"k\">[</span>groupID<span class=\"k\">].</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>groups<span class=\"k\">[</span>groupID<span class=\"k\">][</span>i<span class=\"k\">]</span> <span class=\"k\">==</span> userIndex<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","        ","<span class=\"k\">function</span> addToGroup<span class=\"k\">(</span>groupID<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> clients<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        console<span class=\"k\">.</span>log<span class=\"k\">(</span>clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"user\"</span><span class=\"k\">]);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"user\"</span><span class=\"k\">]</span> <span class=\"k\">==</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>inGroup<span class=\"k\">(</span>user<span class=\"k\">,</span>userIndex<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","                ","            <span class=\"k\">delete</span> groups<span class=\"k\">[</span>clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">]];</span>","            groups<span class=\"k\">[</span>groupID<span class=\"k\">].</span>push<span class=\"k\">(</span>i<span class=\"k\">);</span>","            clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> groupID<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> removeFromGroup<span class=\"k\">(</span>groupID<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","    console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"rem callled - for group=\"</span> <span class=\"k\">+</span> groupID <span class=\"k\">+</span> <span class=\"s\">\"   user=\"</span><span class=\"k\">+</span>user<span class=\"k\">);</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> clients<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"user\"</span><span class=\"k\">]</span> <span class=\"k\">==</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> x<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> x <span class=\"k\">&lt;</span> groups<span class=\"k\">[</span>groupID<span class=\"k\">].</span>length<span class=\"k\">;</span> x<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>groups<span class=\"k\">[</span>groupID<span class=\"k\">][</span>x<span class=\"k\">]</span> <span class=\"k\">==</span> i<span class=\"k\">)</span> <span class=\"k\">{</span>","                    groups<span class=\"k\">[</span>groupID<span class=\"k\">].</span>splice<span class=\"k\">(</span>x<span class=\"k\">,</span><span class=\"s\">1</span><span class=\"k\">);</span>","                    clients<span class=\"k\">[</span>i<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> createGroup<span class=\"k\">(</span>i<span class=\"k\">);</span>","                    console<span class=\"k\">.</span>log<span class=\"k\">(</span>groups<span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> start<span class=\"k\">(</span>server<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * WebSocket server</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> wsServer <span class=\"k\">=</span> <span class=\"k\">new</span> webSocketServer<span class=\"k\">(</span><span class=\"k\">{</span>","        httpServer<span class=\"k\">:</span> server","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    wsServer<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">'request'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>request<span class=\"k\">)</span> <span class=\"k\">{</span>","        console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">'Connection from '</span> <span class=\"k\">+</span> request<span class=\"k\">.</span>origin<span class=\"k\">);</span>","","        <span class=\"c\">// accept connection - you should check 'request.origin' to make sure that</span>","        <span class=\"c\">// client is connecting from your website</span>","        <span class=\"k\">var</span> connection <span class=\"k\">=</span> request<span class=\"k\">.</span>accept<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">,</span> request<span class=\"k\">.</span>origin<span class=\"k\">);</span>","        <span class=\"c\">// we need to know client index to remove them on 'close' event</span>","        <span class=\"c\">//var userName = \"test\"+userIndex;</span>","        <span class=\"c\">//userIndex++;</span>","        <span class=\"k\">var</span> userName<span class=\"k\">;</span>","        <span class=\"k\">var</span> index <span class=\"k\">=</span> clients<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">\"user\"</span><span class=\"k\">:</span> userName<span class=\"k\">,</span><span class=\"s\">\"conn\"</span><span class=\"k\">:</span> connection<span class=\"k\">,</span> <span class=\"s\">\"group\"</span><span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        clients<span class=\"k\">[</span>index<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> createGroup<span class=\"k\">(</span>index<span class=\"k\">);</span>","        <span class=\"k\">var</span> userSet <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">'Connection accepted.'</span><span class=\"k\">);</span>","","        <span class=\"c\">// user sent some message</span>","        connection<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">'message'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>message<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> msg <span class=\"k\">=</span> message<span class=\"k\">.</span>utf8Data<span class=\"k\">;</span>","            ","            <span class=\"k\">if</span> <span class=\"k\">(!</span>userSet<span class=\"k\">)</span> <span class=\"k\">{</span>","                console<span class=\"k\">.</span>log<span class=\"k\">(</span>msg<span class=\"k\">);</span>","                userName <span class=\"k\">=</span> msg<span class=\"k\">;</span>","                clients<span class=\"k\">[</span>index<span class=\"k\">][</span><span class=\"s\">\"user\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> userName<span class=\"k\">;</span>","                userSet <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">else</span> <span class=\"k\">{</span>","                console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">' Received Message from '</span>","                            <span class=\"k\">+</span> userName <span class=\"k\">+</span> <span class=\"s\">': '</span> <span class=\"k\">+</span> msg<span class=\"k\">);</span>","","                <span class=\"k\">var</span> obj<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>msg<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">5</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"/inv \"</span> <span class=\"k\">||</span> msg<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">5</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"/rem \"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> targetUser <span class=\"k\">=</span> msg<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">5</span><span class=\"k\">,</span>msg<span class=\"k\">.</span>length <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">);</span>","                    console<span class=\"k\">.</span>log<span class=\"k\">(</span>msg<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>targetUser <span class=\"k\">==</span> userName<span class=\"k\">)</span> <span class=\"k\">{</span>","                        obj <span class=\"k\">=</span> <span class=\"k\">{</span>","                            time<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","                            text<span class=\"k\">:</span> htmlEntities<span class=\"k\">(</span><span class=\"s\">\"Cant use that on yourself!\"</span><span class=\"k\">),</span>","                            name<span class=\"k\">:</span> <span class=\"s\">\"server\"</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>msg<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">5</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"/inv \"</span> <span class=\"k\">&amp;&amp;</span>","                             addToGroup<span class=\"k\">(</span>clients<span class=\"k\">[</span>index<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">],</span> targetUser<span class=\"k\">))</span> <span class=\"k\">{</span>","                        obj <span class=\"k\">=</span> <span class=\"k\">{</span>","                            time<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","                            text<span class=\"k\">:</span> htmlEntities<span class=\"k\">(</span>targetUser <span class=\"k\">+</span> <span class=\"s\">\" has joined the conversation\"</span><span class=\"k\">),</span>","                            name<span class=\"k\">:</span> <span class=\"s\">\"server\"</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                        ","                    <span class=\"k\">}</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>msg<span class=\"k\">.</span>substr<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"s\">5</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"/rem \"</span> <span class=\"k\">&amp;&amp;</span>","                             removeFromGroup<span class=\"k\">(</span>clients<span class=\"k\">[</span>index<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">],</span> targetUser<span class=\"k\">))</span> <span class=\"k\">{</span>","                        obj <span class=\"k\">=</span> <span class=\"k\">{</span>","                            time<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","                            text<span class=\"k\">:</span> htmlEntities<span class=\"k\">(</span>targetUser <span class=\"k\">+</span> <span class=\"s\">\" has been removed from the conversation\"</span><span class=\"k\">),</span>","                            name<span class=\"k\">:</span> <span class=\"s\">\"server\"</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                        ","                    <span class=\"k\">}</span>","                    <span class=\"k\">else</span> <span class=\"k\">{</span>","                        obj <span class=\"k\">=</span> <span class=\"k\">{</span>","                            time<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","                            text<span class=\"k\">:</span> htmlEntities<span class=\"k\">(</span>targetUser <span class=\"k\">+</span> <span class=\"s\">\" could not be found or is already in the conversation!\"</span><span class=\"k\">),</span>","                            name<span class=\"k\">:</span> <span class=\"s\">\"server\"</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    ","                <span class=\"k\">}</span>","                <span class=\"k\">else</span> <span class=\"k\">{</span>","                    ","                    obj <span class=\"k\">=</span> <span class=\"k\">{</span>","                        time<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"k\">new</span> Date<span class=\"k\">()).</span>getTime<span class=\"k\">(),</span>","                        text<span class=\"k\">:</span> htmlEntities<span class=\"k\">(</span>msg<span class=\"k\">),</span>","                        name<span class=\"k\">:</span> userName","                    <span class=\"k\">}</span><span class=\"k\">;</span>           ","                <span class=\"k\">}</span>","                ","                <span class=\"c\">// broadcast message to all clients in group</span>","                <span class=\"k\">var</span> group <span class=\"k\">=</span> groups<span class=\"k\">[</span>clients<span class=\"k\">[</span>index<span class=\"k\">][</span><span class=\"s\">\"group\"</span><span class=\"k\">]];</span>","                <span class=\"k\">var</span> json <span class=\"k\">=</span> JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>obj<span class=\"k\">);</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> group<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    clients<span class=\"k\">[</span>group<span class=\"k\">[</span>i<span class=\"k\">]][</span><span class=\"s\">\"conn\"</span><span class=\"k\">].</span>sendUTF<span class=\"k\">(</span>json<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"c\">// user disconnected</span>","        connection<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">'close'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>connection<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>userName <span class=\"k\">!==</span> <span class=\"k\">false</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"User disconnected.\"</span><span class=\"k\">);</span>","                <span class=\"c\">// remove user from the list of connected clients</span>","                ","                <span class=\"k\">delete</span> clients<span class=\"k\">[</span>index<span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","exports<span class=\"k\">.</span>start <span class=\"k\">=</span> start<span class=\"k\">;</span>"];
_$jscoverage['chatServer.js'][2]++;
var webSocketServer = require("websocket").server;
_$jscoverage['chatServer.js'][5]++;
var clients = [];
_$jscoverage['chatServer.js'][6]++;
var groups = {};
_$jscoverage['chatServer.js'][8]++;
var userIndex = 0;
_$jscoverage['chatServer.js'][9]++;
var groupCount = 0;
_$jscoverage['chatServer.js'][13]++;
function htmlEntities(str) {
  _$jscoverage['chatServer.js'][14]++;
  return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
}
_$jscoverage['chatServer.js'][18]++;
function createGroup(userIndex) {
  _$jscoverage['chatServer.js'][19]++;
  var newGroup = new Array();
  _$jscoverage['chatServer.js'][20]++;
  newGroup[0] = userIndex;
  _$jscoverage['chatServer.js'][21]++;
  (groupCount++);
  _$jscoverage['chatServer.js'][22]++;
  groups[groupCount] = newGroup;
  _$jscoverage['chatServer.js'][23]++;
  return groupCount;
}
_$jscoverage['chatServer.js'][26]++;
function inGroup(groupID, userIndex) {
  _$jscoverage['chatServer.js'][27]++;
  for (var i = 0; (i < groups[groupID].length); (i++)) {
    _$jscoverage['chatServer.js'][28]++;
    if ((groups[groupID][i] == userIndex)) {
      _$jscoverage['chatServer.js'][29]++;
      return true;
    }
}
  _$jscoverage['chatServer.js'][32]++;
  return false;
}
_$jscoverage['chatServer.js'][35]++;
function addToGroup(groupID, user) {
  _$jscoverage['chatServer.js'][36]++;
  for (var i = 0; (i < clients.length); (i++)) {
    _$jscoverage['chatServer.js'][37]++;
    console.log(clients[i].user);
    _$jscoverage['chatServer.js'][38]++;
    if ((clients[i].user == user)) {
      _$jscoverage['chatServer.js'][39]++;
      if (inGroup(user, userIndex)) {
        _$jscoverage['chatServer.js'][40]++;
        return false;
      }
      _$jscoverage['chatServer.js'][43]++;
      (delete groups[clients[i].group]);
      _$jscoverage['chatServer.js'][44]++;
      groups[groupID].push(i);
      _$jscoverage['chatServer.js'][45]++;
      clients[i].group = groupID;
      _$jscoverage['chatServer.js'][46]++;
      return true;
    }
}
  _$jscoverage['chatServer.js'][49]++;
  return false;
}
_$jscoverage['chatServer.js'][52]++;
function removeFromGroup(groupID, user) {
  _$jscoverage['chatServer.js'][53]++;
  console.log(("rem callled - for group=" + groupID + "   user=" + user));
  _$jscoverage['chatServer.js'][54]++;
  for (var i = 0; (i < clients.length); (i++)) {
    _$jscoverage['chatServer.js'][55]++;
    if ((clients[i].user == user)) {
      _$jscoverage['chatServer.js'][56]++;
      for (var x = 0; (x < groups[groupID].length); (x++)) {
        _$jscoverage['chatServer.js'][57]++;
        if ((groups[groupID][x] == i)) {
          _$jscoverage['chatServer.js'][58]++;
          groups[groupID].splice(x, 1);
          _$jscoverage['chatServer.js'][59]++;
          clients[i].group = createGroup(i);
          _$jscoverage['chatServer.js'][60]++;
          console.log(groups);
          _$jscoverage['chatServer.js'][61]++;
          return true;
        }
}
    }
}
  _$jscoverage['chatServer.js'][66]++;
  return false;
}
_$jscoverage['chatServer.js'][69]++;
function start(server) {
  _$jscoverage['chatServer.js'][73]++;
  var wsServer = new webSocketServer({httpServer: server});
  _$jscoverage['chatServer.js'][77]++;
  wsServer.on("request", (function (request) {
  _$jscoverage['chatServer.js'][78]++;
  console.log(("Connection from " + request.origin));
  _$jscoverage['chatServer.js'][82]++;
  var connection = request.accept(null, request.origin);
  _$jscoverage['chatServer.js'][86]++;
  var userName;
  _$jscoverage['chatServer.js'][87]++;
  var index = (clients.push({"user": userName, "conn": connection, "group": -1}) - 1);
  _$jscoverage['chatServer.js'][88]++;
  clients[index].group = createGroup(index);
  _$jscoverage['chatServer.js'][89]++;
  var userSet = false;
  _$jscoverage['chatServer.js'][91]++;
  console.log("Connection accepted.");
  _$jscoverage['chatServer.js'][94]++;
  connection.on("message", (function (message) {
  _$jscoverage['chatServer.js'][95]++;
  var msg = message.utf8Data;
  _$jscoverage['chatServer.js'][97]++;
  if ((! userSet)) {
    _$jscoverage['chatServer.js'][98]++;
    console.log(msg);
    _$jscoverage['chatServer.js'][99]++;
    userName = msg;
    _$jscoverage['chatServer.js'][100]++;
    clients[index].user = userName;
    _$jscoverage['chatServer.js'][101]++;
    userSet = true;
  }
  else {
    _$jscoverage['chatServer.js'][104]++;
    console.log((" Received Message from " + userName + ": " + msg));
    _$jscoverage['chatServer.js'][107]++;
    var obj;
    _$jscoverage['chatServer.js'][108]++;
    if (((msg.substr(0, 5) == "/inv ") || (msg.substr(0, 5) == "/rem "))) {
      _$jscoverage['chatServer.js'][109]++;
      var targetUser = msg.substr(5, (msg.length - 1));
      _$jscoverage['chatServer.js'][110]++;
      console.log(msg);
      _$jscoverage['chatServer.js'][111]++;
      if ((targetUser == userName)) {
        _$jscoverage['chatServer.js'][112]++;
        obj = {time: new Date().getTime(), text: htmlEntities("Cant use that on yourself!"), name: "server"};
      }
      else {
        _$jscoverage['chatServer.js'][118]++;
        if (((msg.substr(0, 5) == "/inv ") && addToGroup(clients[index].group, targetUser))) {
          _$jscoverage['chatServer.js'][120]++;
          obj = {time: new Date().getTime(), text: htmlEntities((targetUser + " has joined the conversation")), name: "server"};
        }
        else {
          _$jscoverage['chatServer.js'][127]++;
          if (((msg.substr(0, 5) == "/rem ") && removeFromGroup(clients[index].group, targetUser))) {
            _$jscoverage['chatServer.js'][129]++;
            obj = {time: new Date().getTime(), text: htmlEntities((targetUser + " has been removed from the conversation")), name: "server"};
          }
          else {
            _$jscoverage['chatServer.js'][137]++;
            obj = {time: new Date().getTime(), text: htmlEntities((targetUser + " could not be found or is already in the conversation!")), name: "server"};
          }
        }
      }
    }
    else {
      _$jscoverage['chatServer.js'][147]++;
      obj = {time: new Date().getTime(), text: htmlEntities(msg), name: userName};
    }
    _$jscoverage['chatServer.js'][155]++;
    var group = groups[clients[index].group];
    _$jscoverage['chatServer.js'][156]++;
    var json = JSON.stringify(obj);
    _$jscoverage['chatServer.js'][157]++;
    for (var i = 0; (i < group.length); (i++)) {
      _$jscoverage['chatServer.js'][158]++;
      clients[group[i]].conn.sendUTF(json);
}
  }
}));
  _$jscoverage['chatServer.js'][164]++;
  connection.on("close", (function (connection) {
  _$jscoverage['chatServer.js'][165]++;
  if ((userName !== false)) {
    _$jscoverage['chatServer.js'][166]++;
    console.log("User disconnected.");
    _$jscoverage['chatServer.js'][169]++;
    (delete clients[index]);
  }
}));
}));
}
_$jscoverage['chatServer.js'][176]++;
exports.start = start;
