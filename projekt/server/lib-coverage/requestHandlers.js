/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['requestHandlers.js']) {
  _$jscoverage['requestHandlers.js'] = [];
  _$jscoverage['requestHandlers.js'][1] = 0;
  _$jscoverage['requestHandlers.js'][3] = 0;
  _$jscoverage['requestHandlers.js'][4] = 0;
  _$jscoverage['requestHandlers.js'][5] = 0;
  _$jscoverage['requestHandlers.js'][7] = 0;
  _$jscoverage['requestHandlers.js'][8] = 0;
  _$jscoverage['requestHandlers.js'][11] = 0;
  _$jscoverage['requestHandlers.js'][12] = 0;
  _$jscoverage['requestHandlers.js'][13] = 0;
  _$jscoverage['requestHandlers.js'][14] = 0;
  _$jscoverage['requestHandlers.js'][16] = 0;
  _$jscoverage['requestHandlers.js'][17] = 0;
  _$jscoverage['requestHandlers.js'][20] = 0;
  _$jscoverage['requestHandlers.js'][25] = 0;
  _$jscoverage['requestHandlers.js'][29] = 0;
  _$jscoverage['requestHandlers.js'][30] = 0;
  _$jscoverage['requestHandlers.js'][31] = 0;
  _$jscoverage['requestHandlers.js'][32] = 0;
  _$jscoverage['requestHandlers.js'][33] = 0;
  _$jscoverage['requestHandlers.js'][37] = 0;
  _$jscoverage['requestHandlers.js'][41] = 0;
  _$jscoverage['requestHandlers.js'][42] = 0;
  _$jscoverage['requestHandlers.js'][43] = 0;
  _$jscoverage['requestHandlers.js'][44] = 0;
  _$jscoverage['requestHandlers.js'][45] = 0;
  _$jscoverage['requestHandlers.js'][49] = 0;
  _$jscoverage['requestHandlers.js'][53] = 0;
  _$jscoverage['requestHandlers.js'][54] = 0;
  _$jscoverage['requestHandlers.js'][55] = 0;
  _$jscoverage['requestHandlers.js'][56] = 0;
  _$jscoverage['requestHandlers.js'][58] = 0;
  _$jscoverage['requestHandlers.js'][62] = 0;
  _$jscoverage['requestHandlers.js'][66] = 0;
  _$jscoverage['requestHandlers.js'][67] = 0;
  _$jscoverage['requestHandlers.js'][68] = 0;
  _$jscoverage['requestHandlers.js'][69] = 0;
  _$jscoverage['requestHandlers.js'][71] = 0;
  _$jscoverage['requestHandlers.js'][75] = 0;
  _$jscoverage['requestHandlers.js'][79] = 0;
  _$jscoverage['requestHandlers.js'][80] = 0;
  _$jscoverage['requestHandlers.js'][81] = 0;
  _$jscoverage['requestHandlers.js'][82] = 0;
  _$jscoverage['requestHandlers.js'][84] = 0;
  _$jscoverage['requestHandlers.js'][88] = 0;
  _$jscoverage['requestHandlers.js'][92] = 0;
  _$jscoverage['requestHandlers.js'][93] = 0;
  _$jscoverage['requestHandlers.js'][94] = 0;
  _$jscoverage['requestHandlers.js'][95] = 0;
  _$jscoverage['requestHandlers.js'][96] = 0;
  _$jscoverage['requestHandlers.js'][100] = 0;
  _$jscoverage['requestHandlers.js'][104] = 0;
  _$jscoverage['requestHandlers.js'][105] = 0;
  _$jscoverage['requestHandlers.js'][106] = 0;
  _$jscoverage['requestHandlers.js'][107] = 0;
  _$jscoverage['requestHandlers.js'][108] = 0;
  _$jscoverage['requestHandlers.js'][112] = 0;
  _$jscoverage['requestHandlers.js'][116] = 0;
  _$jscoverage['requestHandlers.js'][117] = 0;
  _$jscoverage['requestHandlers.js'][118] = 0;
  _$jscoverage['requestHandlers.js'][119] = 0;
  _$jscoverage['requestHandlers.js'][120] = 0;
  _$jscoverage['requestHandlers.js'][124] = 0;
  _$jscoverage['requestHandlers.js'][128] = 0;
  _$jscoverage['requestHandlers.js'][130] = 0;
  _$jscoverage['requestHandlers.js'][131] = 0;
  _$jscoverage['requestHandlers.js'][132] = 0;
  _$jscoverage['requestHandlers.js'][133] = 0;
  _$jscoverage['requestHandlers.js'][134] = 0;
  _$jscoverage['requestHandlers.js'][135] = 0;
  _$jscoverage['requestHandlers.js'][136] = 0;
  _$jscoverage['requestHandlers.js'][139] = 0;
  _$jscoverage['requestHandlers.js'][144] = 0;
  _$jscoverage['requestHandlers.js'][148] = 0;
  _$jscoverage['requestHandlers.js'][149] = 0;
  _$jscoverage['requestHandlers.js'][150] = 0;
  _$jscoverage['requestHandlers.js'][151] = 0;
  _$jscoverage['requestHandlers.js'][152] = 0;
  _$jscoverage['requestHandlers.js'][155] = 0;
  _$jscoverage['requestHandlers.js'][156] = 0;
  _$jscoverage['requestHandlers.js'][157] = 0;
  _$jscoverage['requestHandlers.js'][158] = 0;
  _$jscoverage['requestHandlers.js'][159] = 0;
  _$jscoverage['requestHandlers.js'][162] = 0;
  _$jscoverage['requestHandlers.js'][163] = 0;
  _$jscoverage['requestHandlers.js'][164] = 0;
  _$jscoverage['requestHandlers.js'][165] = 0;
  _$jscoverage['requestHandlers.js'][166] = 0;
  _$jscoverage['requestHandlers.js'][169] = 0;
  _$jscoverage['requestHandlers.js'][170] = 0;
  _$jscoverage['requestHandlers.js'][171] = 0;
  _$jscoverage['requestHandlers.js'][172] = 0;
  _$jscoverage['requestHandlers.js'][175] = 0;
  _$jscoverage['requestHandlers.js'][178] = 0;
  _$jscoverage['requestHandlers.js'][179] = 0;
  _$jscoverage['requestHandlers.js'][180] = 0;
  _$jscoverage['requestHandlers.js'][181] = 0;
  _$jscoverage['requestHandlers.js'][182] = 0;
  _$jscoverage['requestHandlers.js'][183] = 0;
  _$jscoverage['requestHandlers.js'][184] = 0;
  _$jscoverage['requestHandlers.js'][185] = 0;
  _$jscoverage['requestHandlers.js'][186] = 0;
  _$jscoverage['requestHandlers.js'][187] = 0;
  _$jscoverage['requestHandlers.js'][188] = 0;
}
_$jscoverage['requestHandlers.js'].source = ["var db = require('./db');","","var headers = {};","headers[\"Access-Control-Allow-Origin\"] = \"*\";","headers[\"Access-Control-Allow-Methods\"] = \"POST, GET, OPTIONS\";","","function connectDB(response) {","    db.start(response);","}","","function register(response, urlParts){","    var expected = [\"user\",\"pw\",\"name\"];","    if (checkVars(urlParts, expected)) {","        db.regUser(response, urlParts.query[\"user\"], urlParts.query[\"pw\"], urlParts.query[\"name\"],","                   function(regOK){","                       if (regOK) {","                           sendOK(response, \"Congratulations! Your account has been successfully registred.\");","                       }","                       else {","                           sendOK(response, \"The username is already in use, please try another one!\");","                       }","                   });","    }","    else {","        badReq(response);","    }","}","","function login(response, urlParts){","    var expected = [\"user\",\"pw\"];","    if (checkVars(urlParts, expected)) {","        db.userLogin(response, urlParts.query[\"user\"], urlParts.query[\"pw\"], function(msg){","            sendOK(response, msg);","        });","    }","    else {","        badReq(response);","    }","}","","function logoff(response, urlParts){","    var expected = [\"user\"];","    if (checkVars(urlParts, expected)) {","        db.userLogoff(response, urlParts.query[\"user\"], function(msg){","            sendOK(response, msg);","        });","    }","    else {","        badReq(response);","    }","}","","function showProfile(response, urlParts){","    var expected = [\"user\",\"target\"];","    if (checkVars(urlParts, expected)) {","        db.getProfile(response, urlParts.query[\"user\"], urlParts.query[\"target\"],","                      function(posts){","                          sendJson(response, posts);","                      });","    }","    else {","        badReq(response);","    }","}","","function post(response, urlParts){","    var expected = [\"user\",\"target\"];","    if (checkVars(urlParts, expected)) {","        db.addPost(response, urlParts.query['user'], urlParts.query['target'],","                   urlParts.query['text'], function(msg){","                       sendOK(response, msg);","                   });","    }","    else {","        badReq(response);","    }","}","","function add(response, urlParts){","    var expected = [\"user\",\"target\"];","    if (checkVars(urlParts, expected)) {","        db.addFriend(response, urlParts.query[\"user\"], urlParts.query[\"target\"],","                     function(msg){","                         sendOK(response, msg);","                     });","    }","    else {","        badReq(response);","    }","}","","function friends(response, urlParts){","    var expected = [\"user\"];","    if (checkVars(urlParts, expected)) {","        db.getFriends(response, urlParts.query[\"user\"], function(friendList){","            sendJson(response, friendList);","        });","    }","    else {","        badReq(response);","    }","}","","function onlineFriends(response, urlParts){","    var expected = [\"user\"];","    if (checkVars(urlParts, expected)) {","        db.getOnlineFriends(response, urlParts.query[\"user\"], function(friendsOnline){","            sendJson(response, friendsOnline);","        });","    }","    else {","        badReq(response);","    }","}","","function search(response, urlParts){","    var expected = [\"q\"];","    if (checkVars(urlParts, expected)) {","        db.searchUser(response, urlParts.query[\"q\"], function(result){","            sendJson(response, result);","        });","    }","    else {","        badReq(response);","    }","}","","var fs = require('fs');","","function getTemplate(response, urlParts){","    var expected = [\"template\"];","    if (checkVars(urlParts, expected)) {","        var templ = urlParts.query[\"template\"];","        fs.readFile('./templates/' + templ + '.html', function(err, html){","            if(err){","                badReq(response);","            }","            else {","                sendOK(response, html.toString());","            }","        });","    }","    else {","        badReq(response);","    }","}","","function sendOK(response, msg){","    headers['Content-Type'] = 'text/html';","    response.writeHead(200, headers);","    response.write(msg);","    response.end();","}","","function sendJson(response, json){","    headers['Content-Type'] = 'application/json';","    response.writeHead(200, headers);","    response.write(JSON.stringify(json));","    response.end();","}","","function badReq(response){","    headers['Content-Type'] = 'text/html';","    response.writeHead(400, headers);","    response.write(\"400 Bad Request\");","    response.end();","}","","function checkVars(urlParts, expected) {","    for(var index in expected) {","        if (urlParts.query[expected[index]] == null) {","            return false;","        }","    }","    return true;","}","","exports.connectDB = connectDB;","exports.register = register;","exports.login = login;","exports.logoff = logoff;","exports.post = post;","exports.showProfile = showProfile;","exports.add = add;","exports.friends = friends;","exports.onlineFriends = onlineFriends;","exports.search = search;","exports.getTemplate = getTemplate;"];
_$jscoverage['requestHandlers.js'][1]++;
var db = require("./db");
_$jscoverage['requestHandlers.js'][3]++;
var headers = {};
_$jscoverage['requestHandlers.js'][4]++;
headers["Access-Control-Allow-Origin"] = "*";
_$jscoverage['requestHandlers.js'][5]++;
headers["Access-Control-Allow-Methods"] = "POST, GET, OPTIONS";
_$jscoverage['requestHandlers.js'][7]++;
function connectDB(response) {
  _$jscoverage['requestHandlers.js'][8]++;
  db.start(response);
}
_$jscoverage['requestHandlers.js'][11]++;
function register(response, urlParts) {
  _$jscoverage['requestHandlers.js'][12]++;
  var expected = ["user", "pw", "name"];
  _$jscoverage['requestHandlers.js'][13]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][14]++;
    db.regUser(response, urlParts.query.user, urlParts.query.pw, urlParts.query.name, (function (regOK) {
  _$jscoverage['requestHandlers.js'][16]++;
  if (regOK) {
    _$jscoverage['requestHandlers.js'][17]++;
    sendOK(response, "Congratulations! Your account has been successfully registred.");
  }
  else {
    _$jscoverage['requestHandlers.js'][20]++;
    sendOK(response, "The username is already in use, please try another one!");
  }
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][25]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][29]++;
function login(response, urlParts) {
  _$jscoverage['requestHandlers.js'][30]++;
  var expected = ["user", "pw"];
  _$jscoverage['requestHandlers.js'][31]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][32]++;
    db.userLogin(response, urlParts.query.user, urlParts.query.pw, (function (msg) {
  _$jscoverage['requestHandlers.js'][33]++;
  sendOK(response, msg);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][37]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][41]++;
function logoff(response, urlParts) {
  _$jscoverage['requestHandlers.js'][42]++;
  var expected = ["user"];
  _$jscoverage['requestHandlers.js'][43]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][44]++;
    db.userLogoff(response, urlParts.query.user, (function (msg) {
  _$jscoverage['requestHandlers.js'][45]++;
  sendOK(response, msg);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][49]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][53]++;
function showProfile(response, urlParts) {
  _$jscoverage['requestHandlers.js'][54]++;
  var expected = ["user", "target"];
  _$jscoverage['requestHandlers.js'][55]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][56]++;
    db.getProfile(response, urlParts.query.user, urlParts.query.target, (function (posts) {
  _$jscoverage['requestHandlers.js'][58]++;
  sendJson(response, posts);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][62]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][66]++;
function post(response, urlParts) {
  _$jscoverage['requestHandlers.js'][67]++;
  var expected = ["user", "target"];
  _$jscoverage['requestHandlers.js'][68]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][69]++;
    db.addPost(response, urlParts.query.user, urlParts.query.target, urlParts.query.text, (function (msg) {
  _$jscoverage['requestHandlers.js'][71]++;
  sendOK(response, msg);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][75]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][79]++;
function add(response, urlParts) {
  _$jscoverage['requestHandlers.js'][80]++;
  var expected = ["user", "target"];
  _$jscoverage['requestHandlers.js'][81]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][82]++;
    db.addFriend(response, urlParts.query.user, urlParts.query.target, (function (msg) {
  _$jscoverage['requestHandlers.js'][84]++;
  sendOK(response, msg);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][88]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][92]++;
function friends(response, urlParts) {
  _$jscoverage['requestHandlers.js'][93]++;
  var expected = ["user"];
  _$jscoverage['requestHandlers.js'][94]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][95]++;
    db.getFriends(response, urlParts.query.user, (function (friendList) {
  _$jscoverage['requestHandlers.js'][96]++;
  sendJson(response, friendList);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][100]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][104]++;
function onlineFriends(response, urlParts) {
  _$jscoverage['requestHandlers.js'][105]++;
  var expected = ["user"];
  _$jscoverage['requestHandlers.js'][106]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][107]++;
    db.getOnlineFriends(response, urlParts.query.user, (function (friendsOnline) {
  _$jscoverage['requestHandlers.js'][108]++;
  sendJson(response, friendsOnline);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][112]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][116]++;
function search(response, urlParts) {
  _$jscoverage['requestHandlers.js'][117]++;
  var expected = ["q"];
  _$jscoverage['requestHandlers.js'][118]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][119]++;
    db.searchUser(response, urlParts.query.q, (function (result) {
  _$jscoverage['requestHandlers.js'][120]++;
  sendJson(response, result);
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][124]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][128]++;
var fs = require("fs");
_$jscoverage['requestHandlers.js'][130]++;
function getTemplate(response, urlParts) {
  _$jscoverage['requestHandlers.js'][131]++;
  var expected = ["template"];
  _$jscoverage['requestHandlers.js'][132]++;
  if (checkVars(urlParts, expected)) {
    _$jscoverage['requestHandlers.js'][133]++;
    var templ = urlParts.query.template;
    _$jscoverage['requestHandlers.js'][134]++;
    fs.readFile(("./templates/" + templ + ".html"), (function (err, html) {
  _$jscoverage['requestHandlers.js'][135]++;
  if (err) {
    _$jscoverage['requestHandlers.js'][136]++;
    badReq(response);
  }
  else {
    _$jscoverage['requestHandlers.js'][139]++;
    sendOK(response, html.toString());
  }
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][144]++;
    badReq(response);
  }
}
_$jscoverage['requestHandlers.js'][148]++;
function sendOK(response, msg) {
  _$jscoverage['requestHandlers.js'][149]++;
  headers["Content-Type"] = "text/html";
  _$jscoverage['requestHandlers.js'][150]++;
  response.writeHead(200, headers);
  _$jscoverage['requestHandlers.js'][151]++;
  response.write(msg);
  _$jscoverage['requestHandlers.js'][152]++;
  response.end();
}
_$jscoverage['requestHandlers.js'][155]++;
function sendJson(response, json) {
  _$jscoverage['requestHandlers.js'][156]++;
  headers["Content-Type"] = "application/json";
  _$jscoverage['requestHandlers.js'][157]++;
  response.writeHead(200, headers);
  _$jscoverage['requestHandlers.js'][158]++;
  response.write(JSON.stringify(json));
  _$jscoverage['requestHandlers.js'][159]++;
  response.end();
}
_$jscoverage['requestHandlers.js'][162]++;
function badReq(response) {
  _$jscoverage['requestHandlers.js'][163]++;
  headers["Content-Type"] = "text/html";
  _$jscoverage['requestHandlers.js'][164]++;
  response.writeHead(400, headers);
  _$jscoverage['requestHandlers.js'][165]++;
  response.write("400 Bad Request");
  _$jscoverage['requestHandlers.js'][166]++;
  response.end();
}
_$jscoverage['requestHandlers.js'][169]++;
function checkVars(urlParts, expected) {
  _$jscoverage['requestHandlers.js'][170]++;
  for (var index in expected) {
    _$jscoverage['requestHandlers.js'][171]++;
    if ((urlParts.query[expected[index]] == null)) {
      _$jscoverage['requestHandlers.js'][172]++;
      return false;
    }
}
  _$jscoverage['requestHandlers.js'][175]++;
  return true;
}
_$jscoverage['requestHandlers.js'][178]++;
exports.connectDB = connectDB;
_$jscoverage['requestHandlers.js'][179]++;
exports.register = register;
_$jscoverage['requestHandlers.js'][180]++;
exports.login = login;
_$jscoverage['requestHandlers.js'][181]++;
exports.logoff = logoff;
_$jscoverage['requestHandlers.js'][182]++;
exports.post = post;
_$jscoverage['requestHandlers.js'][183]++;
exports.showProfile = showProfile;
_$jscoverage['requestHandlers.js'][184]++;
exports.add = add;
_$jscoverage['requestHandlers.js'][185]++;
exports.friends = friends;
_$jscoverage['requestHandlers.js'][186]++;
exports.onlineFriends = onlineFriends;
_$jscoverage['requestHandlers.js'][187]++;
exports.search = search;
_$jscoverage['requestHandlers.js'][188]++;
exports.getTemplate = getTemplate;
