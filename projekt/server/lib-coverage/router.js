/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['router.js']) {
  _$jscoverage['router.js'] = [];
  _$jscoverage['router.js'][1] = 0;
  _$jscoverage['router.js'][2] = 0;
  _$jscoverage['router.js'][3] = 0;
  _$jscoverage['router.js'][4] = 0;
  _$jscoverage['router.js'][6] = 0;
  _$jscoverage['router.js'][7] = 0;
  _$jscoverage['router.js'][9] = 0;
  _$jscoverage['router.js'][11] = 0;
  _$jscoverage['router.js'][12] = 0;
  _$jscoverage['router.js'][14] = 0;
  _$jscoverage['router.js'][18] = 0;
  _$jscoverage['router.js'][19] = 0;
  _$jscoverage['router.js'][20] = 0;
  _$jscoverage['router.js'][21] = 0;
  _$jscoverage['router.js'][26] = 0;
  _$jscoverage['router.js'][27] = 0;
  _$jscoverage['router.js'][28] = 0;
  _$jscoverage['router.js'][33] = 0;
}
_$jscoverage['router.js'].source = ["var headers = {};","headers[\"Access-Control-Allow-Origin\"] = \"*\";","headers[\"Access-Control-Allow-Methods\"] = \"POST, GET, OPTIONS\";","headers['Content-Type'] = 'text/html';","","function route(handle, urlParts, response, request) {","    var pathname = urlParts.pathname;","","    console.log(\"About to route a request for \" + pathname);","","    if(request.method == \"GET\") {","        if(typeof handle[pathname] === 'function') {","","\t    handle[pathname](response, urlParts);","            ","        } else {","\t    ","\t    console.log(\"No request handler found for \" + pathname);","\t    response.writeHead(404,headers);","\t    response.write(\"404 Not Found\");","\t    response.end();","            ","        }","    }","    else {","        response.writeHead(405, {'Content-Type' : headers});","\tresponse.write(\"405 Method Not Allowed\");","\tresponse.end();","    }","        ","}","","exports.route = route;"];
_$jscoverage['router.js'][1]++;
var headers = {};
_$jscoverage['router.js'][2]++;
headers["Access-Control-Allow-Origin"] = "*";
_$jscoverage['router.js'][3]++;
headers["Access-Control-Allow-Methods"] = "POST, GET, OPTIONS";
_$jscoverage['router.js'][4]++;
headers["Content-Type"] = "text/html";
_$jscoverage['router.js'][6]++;
function route(handle, urlParts, response, request) {
  _$jscoverage['router.js'][7]++;
  var pathname = urlParts.pathname;
  _$jscoverage['router.js'][9]++;
  console.log(("About to route a request for " + pathname));
  _$jscoverage['router.js'][11]++;
  if ((request.method == "GET")) {
    _$jscoverage['router.js'][12]++;
    if (((typeof handle[pathname]) === "function")) {
      _$jscoverage['router.js'][14]++;
      (handle[pathname])(response, urlParts);
    }
    else {
      _$jscoverage['router.js'][18]++;
      console.log(("No request handler found for " + pathname));
      _$jscoverage['router.js'][19]++;
      response.writeHead(404, headers);
      _$jscoverage['router.js'][20]++;
      response.write("404 Not Found");
      _$jscoverage['router.js'][21]++;
      response.end();
    }
  }
  else {
    _$jscoverage['router.js'][26]++;
    response.writeHead(405, {"Content-Type": headers});
    _$jscoverage['router.js'][27]++;
    response.write("405 Method Not Allowed");
    _$jscoverage['router.js'][28]++;
    response.end();
  }
}
_$jscoverage['router.js'][33]++;
exports.route = route;
