/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['router.js']) {
  _$jscoverage['router.js'] = [];
  _$jscoverage['router.js'][3] = 0;
  _$jscoverage['router.js'][4] = 0;
  _$jscoverage['router.js'][6] = 0;
  _$jscoverage['router.js'][8] = 0;
  _$jscoverage['router.js'][9] = 0;
  _$jscoverage['router.js'][11] = 0;
  _$jscoverage['router.js'][15] = 0;
  _$jscoverage['router.js'][16] = 0;
  _$jscoverage['router.js'][17] = 0;
  _$jscoverage['router.js'][18] = 0;
  _$jscoverage['router.js'][23] = 0;
  _$jscoverage['router.js'][24] = 0;
  _$jscoverage['router.js'][25] = 0;
  _$jscoverage['router.js'][30] = 0;
}
_$jscoverage['router.js'].source = ["","","<span class=\"k\">function</span> route<span class=\"k\">(</span>handle<span class=\"k\">,</span> urlParts<span class=\"k\">,</span> response<span class=\"k\">,</span> request<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> pathname <span class=\"k\">=</span> urlParts<span class=\"k\">.</span>pathname<span class=\"k\">;</span>","","    console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"About to route a request for \"</span> <span class=\"k\">+</span> pathname<span class=\"k\">);</span>","","    <span class=\"k\">if</span><span class=\"k\">(</span>request<span class=\"k\">.</span>method <span class=\"k\">==</span> <span class=\"s\">\"GET\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> handle<span class=\"k\">[</span>pathname<span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","\t    handle<span class=\"k\">[</span>pathname<span class=\"k\">](</span>response<span class=\"k\">,</span> urlParts<span class=\"k\">);</span>","            ","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t    ","\t    console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"No request handler found for \"</span> <span class=\"k\">+</span> pathname<span class=\"k\">);</span>","\t    response<span class=\"k\">.</span>writeHead<span class=\"k\">(</span><span class=\"s\">404</span><span class=\"k\">,</span> <span class=\"k\">{</span><span class=\"s\">'Content-Type'</span> <span class=\"k\">:</span> <span class=\"s\">'text/html'</span><span class=\"k\">}</span><span class=\"k\">);</span>","\t    response<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">\"404 Not Found\"</span><span class=\"k\">);</span>","\t    response<span class=\"k\">.</span>end<span class=\"k\">();</span>","            ","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">else</span> <span class=\"k\">{</span>","        response<span class=\"k\">.</span>writeHead<span class=\"k\">(</span><span class=\"s\">405</span><span class=\"k\">,</span> <span class=\"k\">{</span><span class=\"s\">'Content-Type'</span> <span class=\"k\">:</span> <span class=\"s\">'text/html'</span><span class=\"k\">}</span><span class=\"k\">);</span>","\tresponse<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">\"405 Method Not Allowed\"</span><span class=\"k\">);</span>","\tresponse<span class=\"k\">.</span>end<span class=\"k\">();</span>","    <span class=\"k\">}</span>","        ","<span class=\"k\">}</span>","","exports<span class=\"k\">.</span>route <span class=\"k\">=</span> route<span class=\"k\">;</span>"];
_$jscoverage['router.js'][3]++;
function route(handle, urlParts, response, request) {
  _$jscoverage['router.js'][4]++;
  var pathname = urlParts.pathname;
  _$jscoverage['router.js'][6]++;
  console.log(("About to route a request for " + pathname));
  _$jscoverage['router.js'][8]++;
  if ((request.method == "GET")) {
    _$jscoverage['router.js'][9]++;
    if (((typeof handle[pathname]) === "function")) {
      _$jscoverage['router.js'][11]++;
      (handle[pathname])(response, urlParts);
    }
    else {
      _$jscoverage['router.js'][15]++;
      console.log(("No request handler found for " + pathname));
      _$jscoverage['router.js'][16]++;
      response.writeHead(404, {"Content-Type": "text/html"});
      _$jscoverage['router.js'][17]++;
      response.write("404 Not Found");
      _$jscoverage['router.js'][18]++;
      response.end();
    }
  }
  else {
    _$jscoverage['router.js'][23]++;
    response.writeHead(405, {"Content-Type": "text/html"});
    _$jscoverage['router.js'][24]++;
    response.write("405 Method Not Allowed");
    _$jscoverage['router.js'][25]++;
    response.end();
  }
}
_$jscoverage['router.js'][30]++;
exports.route = route;
