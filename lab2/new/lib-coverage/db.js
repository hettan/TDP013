/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['db.js']) {
  _$jscoverage['db.js'] = [];
  _$jscoverage['db.js'][1] = 0;
  _$jscoverage['db.js'][3] = 0;
  _$jscoverage['db.js'][4] = 0;
  _$jscoverage['db.js'][6] = 0;
  _$jscoverage['db.js'][8] = 0;
  _$jscoverage['db.js'][9] = 0;
  _$jscoverage['db.js'][10] = 0;
  _$jscoverage['db.js'][11] = 0;
  _$jscoverage['db.js'][12] = 0;
  _$jscoverage['db.js'][15] = 0;
  _$jscoverage['db.js'][16] = 0;
  _$jscoverage['db.js'][17] = 0;
  _$jscoverage['db.js'][22] = 0;
  _$jscoverage['db.js'][23] = 0;
  _$jscoverage['db.js'][24] = 0;
  _$jscoverage['db.js'][25] = 0;
  _$jscoverage['db.js'][26] = 0;
  _$jscoverage['db.js'][27] = 0;
  _$jscoverage['db.js'][28] = 0;
  _$jscoverage['db.js'][34] = 0;
  _$jscoverage['db.js'][35] = 0;
  _$jscoverage['db.js'][36] = 0;
  _$jscoverage['db.js'][38] = 0;
  _$jscoverage['db.js'][40] = 0;
  _$jscoverage['db.js'][42] = 0;
  _$jscoverage['db.js'][43] = 0;
  _$jscoverage['db.js'][44] = 0;
  _$jscoverage['db.js'][45] = 0;
  _$jscoverage['db.js'][48] = 0;
  _$jscoverage['db.js'][53] = 0;
  _$jscoverage['db.js'][56] = 0;
  _$jscoverage['db.js'][62] = 0;
  _$jscoverage['db.js'][63] = 0;
  _$jscoverage['db.js'][64] = 0;
  _$jscoverage['db.js'][65] = 0;
  _$jscoverage['db.js'][66] = 0;
  _$jscoverage['db.js'][67] = 0;
  _$jscoverage['db.js'][68] = 0;
  _$jscoverage['db.js'][74] = 0;
  _$jscoverage['db.js'][75] = 0;
  _$jscoverage['db.js'][76] = 0;
}
_$jscoverage['db.js'].source = ["<span class=\"k\">var</span> mongo <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'mongodb'</span><span class=\"k\">);</span>","","<span class=\"k\">var</span> server <span class=\"k\">=</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>Server<span class=\"k\">(</span><span class=\"s\">'localhost'</span><span class=\"k\">,</span> <span class=\"s\">27017</span><span class=\"k\">);</span>","<span class=\"k\">var</span> db <span class=\"k\">=</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>Db<span class=\"k\">(</span><span class=\"s\">'tdp013'</span><span class=\"k\">,</span> server<span class=\"k\">);</span>","","<span class=\"k\">var</span> repository <span class=\"k\">=</span> <span class=\"s\">\"test\"</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> start<span class=\"k\">(</span>response<span class=\"k\">,</span> callback<span class=\"k\">)</span><span class=\"k\">{</span>    ","    db<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span>db<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>err<span class=\"k\">)</span><span class=\"k\">{</span>","            console<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Connected to DB\"</span><span class=\"k\">);</span>","            callback<span class=\"k\">(</span>err<span class=\"k\">,</span>db<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">else</span> <span class=\"k\">{</span>","            response<span class=\"k\">.</span>writeHead<span class=\"k\">(</span><span class=\"s\">500</span><span class=\"k\">,</span> <span class=\"k\">{</span><span class=\"s\">'Content-Type'</span><span class=\"k\">:</span><span class=\"s\">'text/html'</span><span class=\"k\">}</span><span class=\"k\">);</span>","            response<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">\"500 Internal Server Error\"</span><span class=\"k\">);</span>","            response<span class=\"k\">.</span>end<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> addPost <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>response<span class=\"k\">,</span> postMessage<span class=\"k\">,</span> callback<span class=\"k\">)</span><span class=\"k\">{</span>","    start<span class=\"k\">(</span>response<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> db<span class=\"k\">)</span><span class=\"k\">{</span>","        db<span class=\"k\">.</span>collection<span class=\"k\">(</span>repository<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> newPost <span class=\"k\">=</span> <span class=\"k\">{</span><span class=\"s\">\"post\"</span> <span class=\"k\">:</span> postMessage<span class=\"k\">,</span> <span class=\"s\">\"read\"</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">}</span><span class=\"k\">;</span>","            collection<span class=\"k\">.</span>insert<span class=\"k\">(</span>newPost<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> result<span class=\"k\">)</span><span class=\"k\">{</span>","                callback<span class=\"k\">(</span>postMessage <span class=\"k\">+</span> <span class=\"s\">\" added to db\"</span><span class=\"k\">);</span>","                db<span class=\"k\">.</span>close<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> postRead <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>response<span class=\"k\">,</span> id<span class=\"k\">,</span> callback<span class=\"k\">)</span><span class=\"k\">{</span>","    start<span class=\"k\">(</span>response<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span>db<span class=\"k\">)</span><span class=\"k\">{</span>","        db<span class=\"k\">.</span>collection<span class=\"k\">(</span>repository<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> collection<span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                ","                <span class=\"k\">var</span> objectId <span class=\"k\">=</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>BSONPure<span class=\"k\">.</span>ObjectID<span class=\"k\">.</span>createFromHexString<span class=\"k\">(</span>id<span class=\"k\">);</span>","            ","                collection<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span>objectId<span class=\"k\">}</span><span class=\"k\">).</span>toArray<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> post<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>post<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        collection<span class=\"k\">.</span>update<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span>objectId<span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">{</span>$set<span class=\"k\">:</span><span class=\"k\">{</span>read<span class=\"k\">:</span><span class=\"s\">\"1\"</span><span class=\"k\">}}</span><span class=\"k\">);</span>","                        callback<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">else</span> <span class=\"k\">{</span>","                        callback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">catch</span><span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","                callback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">finally</span> <span class=\"k\">{</span>","                db<span class=\"k\">.</span>close<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> listPosts <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>response<span class=\"k\">,</span> callback<span class=\"k\">)</span><span class=\"k\">{</span>","    start<span class=\"k\">(</span>response<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span>db<span class=\"k\">)</span><span class=\"k\">{</span>","        db<span class=\"k\">.</span>collection<span class=\"k\">(</span>repository<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> collection<span class=\"k\">)</span><span class=\"k\">{</span>","            collection<span class=\"k\">.</span>find<span class=\"k\">().</span>toArray<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> docs<span class=\"k\">)</span> <span class=\"k\">{</span>","                console<span class=\"k\">.</span>log<span class=\"k\">(</span>docs<span class=\"k\">);</span>","                callback<span class=\"k\">(</span>docs<span class=\"k\">);</span>","                db<span class=\"k\">.</span>close<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","exports<span class=\"k\">.</span>addPost <span class=\"k\">=</span> addPost<span class=\"k\">;</span>","exports<span class=\"k\">.</span>postRead <span class=\"k\">=</span> postRead<span class=\"k\">;</span>","exports<span class=\"k\">.</span>listPosts <span class=\"k\">=</span> listPosts<span class=\"k\">;</span>","","    "];
_$jscoverage['db.js'][1]++;
var mongo = require("mongodb");
_$jscoverage['db.js'][3]++;
var server = new (mongo.Server)("localhost", 27017);
_$jscoverage['db.js'][4]++;
var db = new (mongo.Db)("tdp013", server);
_$jscoverage['db.js'][6]++;
var repository = "test";
_$jscoverage['db.js'][8]++;
function start(response, callback) {
  _$jscoverage['db.js'][9]++;
  db.open((function (err, db) {
  _$jscoverage['db.js'][10]++;
  if ((! err)) {
    _$jscoverage['db.js'][11]++;
    console.log("Connected to DB");
    _$jscoverage['db.js'][12]++;
    callback(err, db);
  }
  else {
    _$jscoverage['db.js'][15]++;
    response.writeHead(500, {"Content-Type": "text/html"});
    _$jscoverage['db.js'][16]++;
    response.write("500 Internal Server Error");
    _$jscoverage['db.js'][17]++;
    response.end();
  }
}));
}
_$jscoverage['db.js'][22]++;
var addPost = (function (response, postMessage, callback) {
  _$jscoverage['db.js'][23]++;
  start(response, (function (err, db) {
  _$jscoverage['db.js'][24]++;
  db.collection(repository, (function (err, collection) {
  _$jscoverage['db.js'][25]++;
  var newPost = {"post": postMessage, "read": 0};
  _$jscoverage['db.js'][26]++;
  collection.insert(newPost, (function (err, result) {
  _$jscoverage['db.js'][27]++;
  callback((postMessage + " added to db"));
  _$jscoverage['db.js'][28]++;
  db.close();
}));
}));
}));
});
_$jscoverage['db.js'][34]++;
var postRead = (function (response, id, callback) {
  _$jscoverage['db.js'][35]++;
  start(response, (function (err, db) {
  _$jscoverage['db.js'][36]++;
  db.collection(repository, (function (err, collection) {
  _$jscoverage['db.js'][38]++;
  try {
    _$jscoverage['db.js'][40]++;
    var objectId = new (mongo.BSONPure.ObjectID.createFromHexString)(id);
    _$jscoverage['db.js'][42]++;
    collection.find({_id: objectId}).toArray((function (err, post) {
  _$jscoverage['db.js'][43]++;
  if ((post.length > 0)) {
    _$jscoverage['db.js'][44]++;
    collection.update({_id: objectId}, {$set: {read: "1"}});
    _$jscoverage['db.js'][45]++;
    callback(true);
  }
  else {
    _$jscoverage['db.js'][48]++;
    callback(false);
  }
}));
  }
  catch (err) {
    _$jscoverage['db.js'][53]++;
    callback(false);
  }
  finally {
    _$jscoverage['db.js'][56]++;
    db.close();
  }
}));
}));
});
_$jscoverage['db.js'][62]++;
var listPosts = (function (response, callback) {
  _$jscoverage['db.js'][63]++;
  start(response, (function (err, db) {
  _$jscoverage['db.js'][64]++;
  db.collection(repository, (function (err, collection) {
  _$jscoverage['db.js'][65]++;
  collection.find().toArray((function (err, docs) {
  _$jscoverage['db.js'][66]++;
  console.log(docs);
  _$jscoverage['db.js'][67]++;
  callback(docs);
  _$jscoverage['db.js'][68]++;
  db.close();
}));
}));
}));
});
_$jscoverage['db.js'][74]++;
exports.addPost = addPost;
_$jscoverage['db.js'][75]++;
exports.postRead = postRead;
_$jscoverage['db.js'][76]++;
exports.listPosts = listPosts;
